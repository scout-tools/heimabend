# Generated by Django 3.2 on 2021-05-09 14:21

import basic.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import stdimage.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=40, validators=[django.core.validators.MinLengthValidator(5), django.core.validators.MaxLengthValidator(40)])),
                ('description', models.CharField(default='', max_length=8000, validators=[django.core.validators.MaxLengthValidator(8000)])),
                ('description_detail', models.CharField(default='', max_length=1)),
                ('costs_rating', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('execution_time', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('prepairation_time', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('difficulty', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('created_by_email', models.CharField(blank=True, max_length=60)),
                ('like_score', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('age_level', models.IntegerField(null=True)),
                ('group_type', models.IntegerField(null=True)),
                ('group_leader', models.IntegerField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('sorting', models.IntegerField(auto_created=True, null=True, unique=True)),
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('question', models.CharField(blank=True, max_length=1000, null=True)),
                ('answer', models.CharField(blank=True, max_length=2000, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('image', stdimage.models.JPEGField(blank=True, upload_to=basic.models.nameFile)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MessageType',
            fields=[
                ('sorting', models.IntegerField(auto_created=True, null=True, unique=True)),
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30)),
                ('is_comment', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TagCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('sorting', models.IntegerField(unique=True)),
                ('icon', models.CharField(blank=True, max_length=20, null=True)),
                ('is_header', models.BooleanField(default=False)),
                ('is_mandatory', models.BooleanField(default=False)),
                ('is_event_overview', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('color', models.CharField(max_length=7)),
                ('icon', models.CharField(blank=True, max_length=20, null=True)),
                ('sorting', models.IntegerField(null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='basic.tagcategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NextBestHeimabend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('score', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ref', to='basic.event')),
                ('event_score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score', to='basic.event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('created_by_email', models.CharField(blank=True, max_length=60, null=True)),
                ('message_body', models.CharField(max_length=1000)),
                ('is_processed', models.BooleanField(default=False)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basic.event')),
                ('message_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basic.messagetype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=30)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('unit_detaults', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='basic.materialunit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MaterialItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('quantity', models.IntegerField(default=0)),
                ('number_of_participants', models.IntegerField(blank=True, default=0)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='material_list', to='basic.event')),
                ('material_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='basic.materialname')),
                ('material_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='basic.materialunit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('opinion_type_id', models.IntegerField(choices=[(1, 'Like'), (-1, 'Dislike')], default=1)),
                ('like_created', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ImageMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('description', models.CharField(max_length=255)),
                ('is_open_source', models.BooleanField(default=False)),
                ('privacy_consent', models.BooleanField(default=False)),
                ('photographer_name', models.CharField(blank=True, default='', max_length=100)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_id', to='basic.event')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='basic.image')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FaqRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('useful_score', models.SmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('faq', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.faq')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExperimentItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.CharField(blank=True, max_length=20, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=20, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('score', models.IntegerField(null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.event')),
                ('experiment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='basic.experiment')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='event',
            name='tags',
            field=models.ManyToManyField(default='', to='basic.Tag'),
        ),
    ]
